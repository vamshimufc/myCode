// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using wdhrtosis.Data;

namespace wdhrtosis.Migrations.PersonImport
{
    [DbContext(typeof(PersonImportContext))]
    partial class PersonImportContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("wdhrtosis.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset?>("AddressEffectiveDate");

                    b.Property<string>("AddressId");

                    b.Property<string>("AddressLine1");

                    b.Property<string>("AddressLine2");

                    b.Property<string>("AddressLine3");

                    b.Property<string>("AddressLine4");

                    b.Property<string>("AddressLine5");

                    b.Property<string>("AddressType");

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<string>("CountryCode");

                    b.Property<bool?>("DefaultedBusinessAddress");

                    b.Property<string>("EmployeeId");

                    b.Property<DateTime>("ImportCreatedDate");

                    b.Property<bool>("ImportIsActiveRecord");

                    b.Property<DateTime>("ImportLastUpdatedDate");

                    b.Property<string>("PostalCode");

                    b.Property<bool?>("PrimaryIndicator");

                    b.Property<bool?>("PublicIndicator");

                    b.Property<string>("StateProvince");

                    b.Property<string>("StateProvinceCode");

                    b.Property<string>("UniversalId");

                    b.HasKey("Id");

                    b.ToTable("PersonAddress");
                });

            modelBuilder.Entity("wdhrtosis.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AreaCityCode");

                    b.Property<string>("CountryAccessCode");

                    b.Property<string>("DeviceType");

                    b.Property<string>("EmployeeId");

                    b.Property<string>("Extension");

                    b.Property<DateTime>("ImportCreatedDate");

                    b.Property<bool>("ImportIsActiveRecord");

                    b.Property<DateTime>("ImportLastUpdatedDate");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("PhoneNumberFormatted");

                    b.Property<string>("PhoneType");

                    b.Property<bool?>("PrimaryIndicator");

                    b.Property<bool?>("PublicIndicator");

                    b.Property<string>("UniversalId");

                    b.HasKey("Id");

                    b.ToTable("PersonContact");
                });

            modelBuilder.Entity("wdhrtosis.Models.Email", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailAddress");

                    b.Property<string>("EmailComment");

                    b.Property<string>("EmailType");

                    b.Property<string>("EmployeeId");

                    b.Property<DateTime>("ImportCreatedDate");

                    b.Property<bool>("ImportIsActiveRecord");

                    b.Property<DateTime>("ImportLastUpdatedDate");

                    b.Property<bool?>("PrimaryIndicator");

                    b.Property<bool?>("PublicIndicator");

                    b.Property<string>("UniversalId");

                    b.HasKey("Id");

                    b.ToTable("PersonEmailAddress");
                });

            modelBuilder.Entity("wdhrtosis.Models.EmploymentPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset?>("AnnualWorkPeriodEndDate");

                    b.Property<DateTimeOffset?>("AnnualWorkPeriodStartDate");

                    b.Property<string>("BuildingName");

                    b.Property<string>("BuildingNumber");

                    b.Property<string>("BusinessTitle");

                    b.Property<DateTimeOffset?>("DisbursementPlanPeriodEndDate");

                    b.Property<DateTimeOffset?>("DisbursementPlanPeriodStartDate");

                    b.Property<string>("EmployeeId");

                    b.Property<string>("EmployeeType");

                    b.Property<string>("FloorNumber");

                    b.Property<string>("ImportCorrelationId");

                    b.Property<DateTime>("ImportCreatedDate");

                    b.Property<bool>("ImportIsActiveRecord");

                    b.Property<DateTime>("ImportLastUpdatedDate");

                    b.Property<string>("JobActiveIndicator");

                    b.Property<string>("JobBenefitsActiveIndicator");

                    b.Property<string>("JobClassificationGroup");

                    b.Property<string>("JobCode");

                    b.Property<DateTimeOffset?>("JobEffectiveDate");

                    b.Property<DateTimeOffset?>("JobEndDate");

                    b.Property<decimal?>("JobFTE")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<string>("JobStatus");

                    b.Property<string>("JobTitle");

                    b.Property<string>("Manager");

                    b.Property<string>("PayGroup");

                    b.Property<string>("PayType");

                    b.Property<int>("PrimaryJobIndicator");

                    b.Property<string>("RoomNumber");

                    b.Property<string>("TerminationReason");

                    b.Property<string>("TimeType");

                    b.Property<string>("UniversalId");

                    b.Property<int>("WorkPeriodPercentOfYear");

                    b.HasKey("Id");

                    b.ToTable("PersonEmploymentPosition");
                });

            modelBuilder.Entity("wdhrtosis.Models.EmploymentProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Campus");

                    b.Property<string>("CampusMailStop");

                    b.Property<DateTimeOffset?>("ContinuousServiceDate");

                    b.Property<string>("EmployeeId");

                    b.Property<DateTimeOffset?>("HireDate");

                    b.Property<string>("ImportCorrelationId");

                    b.Property<DateTime>("ImportCreatedDate");

                    b.Property<bool>("ImportIsActiveRecord");

                    b.Property<DateTime>("ImportLastUpdatedDate");

                    b.Property<string>("LocationHierarchy");

                    b.Property<string>("OptOutTotalDirectoryInfo");

                    b.Property<string>("OptOutWURecord");

                    b.Property<DateTimeOffset?>("OrigHireDate");

                    b.Property<int?>("RetireeIndicator");

                    b.Property<string>("Status");

                    b.Property<DateTimeOffset?>("TerminationDate");

                    b.Property<decimal?>("TotalFTE")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<string>("UniversalId");

                    b.Property<string>("WorkerPrimaryPositionType");

                    b.Property<string>("WorkerType");

                    b.HasKey("Id");

                    b.ToTable("PersonEmploymentProfile");
                });

            modelBuilder.Entity("wdhrtosis.Models.History", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CorrelationId");

                    b.Property<string>("ErrorMessage");

                    b.Property<DateTimeOffset>("LastRun");

                    b.Property<string>("Message");

                    b.Property<bool>("Success");

                    b.HasKey("Id");

                    b.ToTable("PersonHistory");

                    b.HasData(
                        new { Id = 1, CorrelationId = "First 50 days", LastRun = new DateTimeOffset(new DateTime(2020, 1, 8, 17, 9, 21, 583, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)), Message = "Initial Seed", Success = true }
                    );
                });

            modelBuilder.Entity("wdhrtosis.Models.Name", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset?>("DateofBirth");

                    b.Property<string>("EmployeeId");

                    b.Property<string>("FirstName");

                    b.Property<string>("Gender");

                    b.Property<DateTime>("ImportCreatedDate");

                    b.Property<bool>("ImportIsActiveRecord");

                    b.Property<DateTime>("ImportLastUpdatedDate");

                    b.Property<string>("LastName");

                    b.Property<string>("MiddleName");

                    b.Property<string>("NationalId");

                    b.Property<string>("PreferredFirstName");

                    b.Property<string>("PreferredLastName");

                    b.Property<string>("PreferredMiddleName");

                    b.Property<string>("PreferredPrefix");

                    b.Property<string>("PreferredSuffix");

                    b.Property<string>("Prefix");

                    b.Property<string>("Pronunciation");

                    b.Property<string>("ReportingName");

                    b.Property<string>("Suffix");

                    b.Property<string>("UniversalId");

                    b.HasKey("Id");

                    b.ToTable("PersonName");
                });

            modelBuilder.Entity("wdhrtosis.Models.ProcessSummary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<DateTime>("LastRun");

                    b.Property<int>("ObjectCount");

                    b.Property<string>("ObjectProcessed");

                    b.HasKey("Id");

                    b.ToTable("PersonImportProcessSummary");
                });

            modelBuilder.Entity("wdhrtosis.Models.Visa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmployeeId");

                    b.Property<DateTime>("ImportCreatedDate");

                    b.Property<bool>("ImportIsActiveRecord");

                    b.Property<DateTime>("ImportLastUpdatedDate");

                    b.Property<string>("UniversalId");

                    b.Property<string>("VisaCountry");

                    b.Property<DateTimeOffset?>("VisaExpiryDate");

                    b.Property<DateTimeOffset?>("VisaIssueDate");

                    b.Property<string>("VisaIssuingAuthority");

                    b.Property<string>("VisaNumber");

                    b.Property<string>("VisaPermitDuration");

                    b.Property<string>("VisaPermitDurationType");

                    b.Property<string>("VisaPermitStatus");

                    b.Property<string>("VisaType");

                    b.Property<DateTimeOffset?>("VisaVerificationDate");

                    b.HasKey("Id");

                    b.ToTable("PersonVisa");
                });
#pragma warning restore 612, 618
        }
    }
}
